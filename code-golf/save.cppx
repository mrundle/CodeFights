#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <vector>
#include <string>
using namespace std;

// compare a vector by an arbitrary index
class Vec2Comp {
    public:
        Vec2Comp(const int idx) : _idx(idx) {}
        bool operator() (const vector<int> &a, const vector<int> &b) const {
            return a[_idx] < b[_idx];
        }
    private:
        const int _idx;
};

int
print_dvec(vector<vector<int>> &v)
{
    for (int i = 0; i < v.size(); i++) {
        printf("[ ");
        for (int j = 0; j < v.size(); j++) {
             printf("%d%s", v[i][j], j < v.size() - 1 ? ", " : " ]\n");
        }
    }
}


int main(void)
{
    vector<int> A = {1,8,9};
    vector<int> B = {4,-1,3};
    vector<int> C = {7,2,6};
    vector<vector<int>> V = {C,B,A};

    printf("Original:\n\n");
    print_dvec(V);

    for (int i = 0; i < V[0].size(); i++) {
        printf("\nSorting by index %d:\n\n", i);
        stable_sort(V.begin(), V.end(), Vec2Comp(i));
        print_dvec(V);
    }

    return 0;
}
